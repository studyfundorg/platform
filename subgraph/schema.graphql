type Donor @entity {
  id: ID!
  address: String!
  totalDonated: BigInt!
  unclaimedRewards: BigInt!
  totalRewards: BigInt!
  entries: BigInt!
  donations: [Donation!]! @derivedFrom(field: "donor")
  raffleEntries: [RaffleEntry!]! @derivedFrom(field: "donor")
  history: [History!]! @derivedFrom(field: "donor")
  createdAt: BigInt!
  updatedAt: BigInt!
}

type Donation @entity {
  id: ID!
  donor: Donor!
  amount: BigInt!
  entries: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: String!
}

type Raffle @entity {
  id: ID!
  startTime: BigInt!
  endTime: BigInt!
  prizePool: BigInt!
  donations: BigInt!
  winners: [String!]
  runnerUps: [String!]
  completed: Boolean!
  entries: [RaffleEntry!]! @derivedFrom(field: "raffle")
  prizes: [RafflePrize!]! @derivedFrom(field: "raffle")
  createdAt: BigInt!
  completedAt: BigInt
}

type RaffleEntry @entity {
  id: ID!
  raffle: Raffle!
  donor: Donor!
  entries: BigInt!
}

type RafflePrize @entity {
  id: ID!
  raffle: Raffle!
  winner: String!
  amount: BigInt!
  transactionHash: String
}

type Scholarship @entity {
  id: ID!
  recipient: String!
  amount: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: String!
}

type History @entity {
  id: ID!
  donor: Donor!
  timestamp: BigInt!
  donation: Donation
  reward: RafflePrize
  raffle: Raffle
  transactionHash: String
  type: HistoryType!
  amount: BigInt!
}

type ClaimedPrize @entity {
  id: ID!
  donor: Donor!
  amount: BigInt!
  timestamp: BigInt!
  transactionHash: String
}

enum HistoryType {
  Reward
  Scholarship
  Donation
}